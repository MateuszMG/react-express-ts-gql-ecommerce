# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ResMessage {
  message: String!
}

type AccessToken {
  accessToken: String!
}

type DecodedUser {
  id: String!
  username: String!
  email: String!
  roles: [String!]!
}

type Category {
  id: ID!
  category: String!
}

type Price {
  wholesale: Float!
  retail: Float!
}

type Size {
  weight: Float!
  length: Float!
  width: Float!
  height: Float!
}

type Distinction {
  active: Boolean!
  startTime: DateTime!
  endTime: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Sale {
  active: Boolean!
  startTime: DateTime!
  endTime: DateTime!
  priceBeforeSale: Float!
  priceAfterSale: Float!
  percentageDiscount: Float!
}

type RatingsDetails {
  ratingId: String!
  userId: String!
  rating: Float!
  date: DateTime!
}

type Ratings {
  activeFake: Boolean!
  details: [RatingsDetails!]!
  fakeTotal: Float!
  fakeQuantity: Float!
  originalTotal: Float!
  originalQuantity: Float!
  totalOriginalAndFake: Float!
  quantityOriginalAndFake: Float!
}

type ViewsDetails {
  guestIP: String!
  date: DateTime!
}

type Views {
  activeFake: Boolean!
  details: [ViewsDetails!]!
  fakeTotal: Float!
  originalTotal: Float!
  originalAndFakeTotal: Float!
  originalTotalViewsWithoutDuplicateIPAddresses: Float!
}

type SoldDetails {
  guestIP: String!
  soldId: String!
  userId: String!
  quantity: Float!
  price: Price!
  activeSale: Boolean!
  activeCoupon: Boolean!
  activeDistinction: Boolean!
  purchasePriceBeforeDiscount: Float!
  purchasePrice: Float!
  profit: Float!
  amountDiscount: Float!
  percentageDiscount: Float!
  date: DateTime!
}

type Sold {
  activeFake: Boolean!
  details: [SoldDetails!]!
  fakeTotal: Float!
  originalTotal: Float!
  originalAndFakeTotal: Float!
}

type Product {
  id: ID!
  title: String!
  subtitle: String!
  description: String!
  model: String!
  category: String!
  active: Boolean!
  quantity: Float!
  image: String!
  price: Price!
  size: Size!
  distinction: Distinction!
  sale: Sale!
  ratings: Ratings!
  views: Views!
  sold: Sold!
}

type Comment {
  id: ID!
  productId: String!
  userId: String!
  username: String!
  comment: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Query {
  logout: ResMessage!
  profile: DecodedUser!
  getProducts: [Product!]!
  getProduct(input: IdInput!): Product!
  getHighlightedProduct: Product!
  getCategories: [Category!]!
  getComments(input: GetCommentsInput!): [Comment!]!
}

input IdInput {
  id: String!
}

input GetCommentsInput {
  productId: String!
}

type Mutation {
  login(loginInput: LoginInput!): AccessToken!
  register(registerInput: RegisterInput!): AccessToken!
  addProduct(input: ProductInput!): Product!
  editProduct(input: EditProductInput!): ResMessage!
  deleteProduct(input: IdInput!): ResMessage!
  changeActiveProduct(input: IdInput!): ResMessage!
  addCategory(input: CategoryInput!): Category!
  editCategory(input: EditCategoryInput!): ResMessage!
  deleteCategory(input: IdInput!): ResMessage!
  addComment(input: AddCommentInput!): Comment!
  editComment(input: EditCommentInput!): Comment!
  deleteComment(input: IdInput!): ResMessage!
}

input LoginInput {
  email: String!
  password: String!
}

input RegisterInput {
  username: String!
  email: String!
  password: String!
  confirmPassword: String!
}

input ProductInput {
  title: String!
  description: String!
  subtitle: String!
  model: String!
  category: String!
  active: Boolean!
  quantity: Float!
  image: String!
  price: ProductPriceInput!
  size: ProductSizeInput!
  distinction: ProductDistinctionInput!
  sale: ProductSaleInput!
  ratings: ProductRatingsInput!
  views: ProductViewsInput!
  sold: ProductSoldInput!
}

input ProductPriceInput {
  wholesale: Float!
  retail: Float!
}

input ProductSizeInput {
  weight: Float!
  length: Float!
  width: Float!
  height: Float!
}

input ProductDistinctionInput {
  active: Boolean!
  startTime: DateTime!
  endTime: DateTime!
}

input ProductSaleInput {
  active: Boolean!
  startTime: DateTime!
  endTime: DateTime!
  priceBeforeSale: Float!
  priceAfterSale: Float!
  percentageDiscount: Float!
}

input ProductRatingsInput {
  activeFake: Boolean!
  fakeTotal: Float!
  fakeQuantity: Float!
}

input ProductViewsInput {
  activeFake: Boolean!
  fakeTotal: Float!
}

input ProductSoldInput {
  activeFake: Boolean!
  fakeTotal: Float!
}

input EditProductInput {
  title: String!
  description: String!
  subtitle: String!
  model: String!
  category: String!
  active: Boolean!
  quantity: Float!
  image: String!
  price: ProductPriceInput!
  size: ProductSizeInput!
  distinction: ProductDistinctionInput!
  sale: ProductSaleInput!
  ratings: ProductRatingsInput!
  views: ProductViewsInput!
  sold: ProductSoldInput!
  id: String!
}

input CategoryInput {
  category: String!
}

input EditCategoryInput {
  category: String!
  id: String!
}

input AddCommentInput {
  productId: String!
  comment: String!
}

input EditCommentInput {
  id: String!
  comment: String!
}

type Subscription {
  highlightedProductUpdated: Product
}